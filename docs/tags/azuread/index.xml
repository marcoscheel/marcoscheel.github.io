<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AzureAD on Marco Scheel aka GeekDotNet</title>
    <link>/tags/azuread/</link>
    <description>Recent content in AzureAD on Marco Scheel aka GeekDotNet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 02 Aug 2019 19:41:30 +0000</lastBuildDate><atom:link href="/tags/azuread/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Manage Microsoft Teams membership with Azure AD Access Review</title>
      <link>/post/186728523052-manage-microsoft-teams-membership-with-azure-ad/</link>
      <pubDate>Fri, 02 Aug 2019 19:41:30 +0000</pubDate>
      
      <guid>/post/186728523052-manage-microsoft-teams-membership-with-azure-ad/</guid>
      <description>&lt;p&gt;This post will introduce you to the Azure AD Access Review feature. With the introduction of modern collaboration through Microsoft 365 and Microsoft Teams being the main tool it is important to mange who is a member to the underlying Office 365 Group (Azure AD Group).&lt;/p&gt;
&lt;p&gt;&amp;lt;DE&amp;gt;Für eine erhöhte Reichweite wird der Post heute auf Englisch erscheinen. Es geht um die Einführung von Access Reviews (Azure AD) im Zusammenspiel mit Microsoft Teams. Das Verwalten der Mitgliedschaft eines Teams wird durch den Einsatz von diesem Feature unterstützt und stellt die Besitzer weiter in den Mittelpunkt. Sollte großes Interesse an einer komplett deutschen Version bestehen, dann lasst es mich bitte wissen.&amp;lt;/DE&amp;gt;&lt;/p&gt;
&lt;p&gt;Microsoft has great &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/governance/access-reviews-overview&#34; target=&#34;_blank&#34;&gt;resources&lt;/a&gt; to get started on a technical level. The feature enables a set of people to review another set of people. Azure AD is leveraging this capability (all under the bigger umbrella called &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/governance/identity-governance-overview&#34; target=&#34;_blank&#34;&gt;Identity Governance)&lt;/a&gt; on two assets: Azure AD Groups and Azure AD Apps. Microsoft Teams as a hub for collaboration is build on top of Office 365 Groups and so we will have a closer look at the Access Review part for Azure AD Groups.&lt;/p&gt;
&lt;p&gt;Each Office 365 Group (each Team) is build from a set of owners and members. With the open nature of Office 365, members can be employees, contractors, or people outside of the organization.
&lt;img class=&#34;img-zoomable&#34; src=&#34;/tmblr/76/bd/e538a30288a1511ad21a1fa8800e.png&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>App Permissions für Microsoft Graph Calls automatisiert einrichten</title>
      <link>/post/186138885112-app-permissions-f%C3%BCr-microsoft-graph-calls/</link>
      <pubDate>Mon, 08 Jul 2019 11:47:21 +0000</pubDate>
      
      <guid>/post/186138885112-app-permissions-f%C3%BCr-microsoft-graph-calls/</guid>
      <description>&lt;p&gt;Für unser Glück &amp;amp; Kanja Lifecycle Tool setze ich im Schwerpunkt auf Microsoft Graph Calls. Für ein sauberes Setup habe ich mittlerweile ein Script. Es nutzt die &lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-2.0.0&#34; target=&#34;_blank&#34;&gt;PowerShell AZ&lt;/a&gt; und die &lt;a href=&#34;https://docs.microsoft.com/en-US/cli/azure/install-azure-cli?view=azure-cli-latest&#34; target=&#34;_blank&#34;&gt;Azure CLI&lt;/a&gt;. Besonders beim Erstellen einer Azure AD App (genauer Berechtigen und Granten) ist die Azure CLI noch ein Stück besser bzw. umfangreicher als die AZ PowerShell.&lt;/p&gt;
&lt;p&gt;Die Lifecycle App arbeitet mit AD Settings und Groups. Erweiterte Funktionen setzen auf &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/governance/access-reviews-overview&#34; target=&#34;_blank&#34;&gt;Access Reviews&lt;/a&gt; Feature aus dem AAD P2 Lizenzset. Diese Graph Berechtigungen setze ich direkt per CLI Script:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;az ad app permission add --id $adapp.ApplicationId --api 00000003-0000-0000-c000-000000000000 --api-permissions 19dbc75e-c2e2-444c-a770-ec69d8559fc7=Role #msgraph Directory.ReadWrite.All
az ad app permission add --id $adapp.ApplicationId --api 00000003-0000-0000-c000-000000000000 --api-permissions 62a82d76-70ea-41e2-9197-370581804d09=Role #msgraph Group.ReadWrite.All
az ad app permission add --id $adapp.ApplicationId --api 00000003-0000-0000-c000-000000000000 --api-permissions ef5f7d5c-338f-44b0-86c3-351f46c8bb5f=Role #msgraph AccessReview.ReadWrite.All
az ad app permission add --id $adapp.ApplicationId --api 00000003-0000-0000-c000-000000000000 --api-permissions 60a901ed-09f7-4aa5-a16e-7dd3d6f9de36=Role #msgraph ProgramControl.ReadWrite.All
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Microsoft Graph, Postman und Wie bekomme ich ein App Only Token?</title>
      <link>/post/185978935612-microsoft-graph-postman-und-wie-bekomme-ich-ein/</link>
      <pubDate>Mon, 01 Jul 2019 15:06:23 +0000</pubDate>
      
      <guid>/post/185978935612-microsoft-graph-postman-und-wie-bekomme-ich-ein/</guid>
      <description>&lt;p&gt;Der Microsoft Graph ist das “Schweizer Taschenmesser” für alle im Microsoft 365 Umfeld. Eine API für “alle” Dienste und noch besser immer das gleiche Authentifizierungsmodel. Im &lt;a href=&#34;https://hairlessinthecloud.com&#34; target=&#34;_blank&#34;&gt;Hairless in the Cloud&lt;/a&gt; Podcast Nummer &lt;a href=&#34;https://anchor.fm/hairlessinthecloud/episodes/018---Wir-kennen-die-Passwrter-Eurer-User-und-Microsoft-Graph-e42di4/a-aff2ff&#34; target=&#34;_blank&#34;&gt;18&lt;/a&gt; habe ich meine Eindrücke zum Microsoft Graph schon geschildert. Der Graph Explorer auf der Website ist eine gute Methode den Graph kennenzulernen. Ich für meinen Teil bewege mich aber überwiegend ohne Benutzerinteraktion im Graph und somit nutze ich in meinen Anwendungen die Application Permissions. Die meisten APIs (vgl. Teams) kommen allerdings erstmal ohne App Permissions daher. Die Enttäuschung ist groß, wenn man über den Graph Explorer sein Research gemacht hat und dann feststellt, dass die Calls als App Permission scheitern.&lt;/p&gt;
&lt;p&gt;Jeremy Thake aus dem Microsoft Graph Team hat vor einigen Monaten angefangen, die Samples (und mehr) aus dem &lt;a href=&#34;https://developer.microsoft.com/en-us/graph/blogs/postman-collections/&#34; target=&#34;_blank&#34;&gt;Graph Explorer in einer Collection für Postman&lt;/a&gt; zu veröffentlichen. Diese Collection vereinfacht das Testen der eigenen Calls und gibt Anregung für neue Szenarien.&lt;/p&gt;
&lt;p&gt;In der Vergangenheit habe ich mir aus meiner Azure Function das Token “geklaut” und dann im Postman als Bearer Token direkt hinterlegt:
&lt;img class=&#34;img-zoomable&#34; src=&#34;/tmblr/cd/ef/cad14ee0d8e93c6d3b12f08d7601.png&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SharePoint Online Device Access Option fehlt - Lösung: First Release for everyone</title>
      <link>/post/165449521992-sharepoint-online-device-access-option-fehlt/</link>
      <pubDate>Sun, 17 Sep 2017 21:11:09 +0000</pubDate>
      
      <guid>/post/165449521992-sharepoint-online-device-access-option-fehlt/</guid>
      <description>&lt;p&gt;In meinen Projekten (&lt;a href=&#34;https://www.glueckkanja.com/technologien/office-365/&#34; target=&#34;_blank&#34;&gt;Office 365&lt;/a&gt; / &lt;a href=&#34;https://www.glueckkanja.com/blog/microsoft/ems/award/2017/06/gk-partner-of-the-year/&#34; target=&#34;_blank&#34;&gt;100% Cloud&lt;/a&gt;) ist &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/active-directory/active-directory-conditional-access-technical-reference&#34; target=&#34;_blank&#34;&gt;Conditional Access&lt;/a&gt; (CA) nicht mehr wegzudenken. Für uns “SharePoint“ Leute hat CA eine spezielle Geschmacksrichtung. Eine der ersten Session-Based CA Policies arbeitet mit SharePoint und ermöglicht so zusätzliche Kontrollen beim Zugriff auf SharePoint. Microsoft hat das ganze in einem &lt;a href=&#34;https://techcommunity.microsoft.com/t5/SharePoint-Blog/Device-based-Conditional-Access-Policies-Rolling-out-to-First/ba-p/51912&#34; target=&#34;_blank&#34;&gt;Blogpost&lt;/a&gt; beschrieben. Jetzt wurde angekündigt, dass es in die nächste Runde geht und die Konfiguration nicht mehr auf den ganzen Tenant zieht, sondern &lt;a href=&#34;https://techcommunity.microsoft.com/t5/SharePoint-Blog/Device-based-Policies-Updates-with-SharePoint-and-OneDrive/ba-p/101827&#34; target=&#34;_blank&#34;&gt;einzelne Site Collections &lt;/a&gt;adressiert. In diesem Zuge wollte ich mal wieder meine AAD + SPO Konfiguration gerade ziehen, aber siehe da&amp;hellip; es fehlt was! So sieht es im SharePoint Admin Center unter dem Punkt “Device Access” aus:
&lt;img class=&#34;img-zoomable&#34; src=&#34;/tmblr/44/60/b19d1309eb9d2f84b06d45a2bcd3.png&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;Eigentlich sollte der Dialog so aussehen:
&lt;img class=&#34;img-zoomable&#34; src=&#34;/tmblr/f5/a7/e82673d65fdeb9ee1164a68a30ac.png&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
